<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.arexstorm.sharing.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="top.arexstorm.sharing.bean.order.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orderid" jdbcType="VARCHAR" property="orderid" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="back" jdbcType="SMALLINT" property="back" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="lasttime" jdbcType="TIMESTAMP" property="lasttime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="buyerid" jdbcType="VARCHAR" property="buyerid" />
    <result column="sellerid" jdbcType="VARCHAR" property="sellerid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderid, count, back, createtime, lasttime, status, buyerid, sellerid, amount
  </sql>
  <select id="selectByExample" parameterType="top.arexstorm.sharing.bean.order.OrderQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from s_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.arexstorm.sharing.bean.order.OrderQuery">
    delete from s_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.arexstorm.sharing.bean.order.Order">
    insert into s_order (id, orderid, count, 
      back, createtime, lasttime, 
      status, buyerid, sellerid, 
      amount)
    values (#{id,jdbcType=BIGINT}, #{orderid,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{back,jdbcType=SMALLINT}, #{createtime,jdbcType=TIMESTAMP}, #{lasttime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{buyerid,jdbcType=VARCHAR}, #{sellerid,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="top.arexstorm.sharing.bean.order.Order">
    insert into s_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="back != null">
        back,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="buyerid != null">
        buyerid,
      </if>
      <if test="sellerid != null">
        sellerid,
      </if>
      <if test="amount != null">
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="back != null">
        #{back,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="buyerid != null">
        #{buyerid,jdbcType=VARCHAR},
      </if>
      <if test="sellerid != null">
        #{sellerid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.arexstorm.sharing.bean.order.OrderQuery" resultType="java.lang.Long">
    select count(*) from s_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.back != null">
        back = #{record.back,jdbcType=SMALLINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lasttime != null">
        lasttime = #{record.lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.buyerid != null">
        buyerid = #{record.buyerid,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerid != null">
        sellerid = #{record.sellerid,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_order
    set id = #{record.id,jdbcType=BIGINT},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      back = #{record.back,jdbcType=SMALLINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      lasttime = #{record.lasttime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      buyerid = #{record.buyerid,jdbcType=VARCHAR},
      sellerid = #{record.sellerid,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.arexstorm.sharing.bean.order.Order">
    update s_order
    <set>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="back != null">
        back = #{back,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="buyerid != null">
        buyerid = #{buyerid,jdbcType=VARCHAR},
      </if>
      <if test="sellerid != null">
        sellerid = #{sellerid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.arexstorm.sharing.bean.order.Order">
    update s_order
    set orderid = #{orderid,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      back = #{back,jdbcType=SMALLINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      lasttime = #{lasttime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      buyerid = #{buyerid,jdbcType=VARCHAR},
      sellerid = #{sellerid,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>